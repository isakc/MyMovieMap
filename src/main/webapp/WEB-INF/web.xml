<?xml version="1.0" encoding="UTF-8"?>

<web-app xmlns="http://xmlns.jcp.org/xml/ns/javaee"
  xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
  xsi:schemaLocation="http://xmlns.jcp.org/xml/ns/javaee
                      http://xmlns.jcp.org/xml/ns/javaee/web-app_4_0.xsd"
  version="4.0"
  metadata-complete="true">
  <!-- :: ContextLoaderListner을 이용한 Business logic Meta-Data등록
		 - 빈설정(Meta-Data) 파일은 DispatcherServlet의 init-param의
		   contextConfigLocation으로 등록하는 방법과
		 - ContextLoaderListener로 등록하는 방법이 있다.-->
	
	<listener>
		<listener-class>org.springframework.web.context.ContextLoaderListener</listener-class>
	</listener>
	
	<context-param>
		<param-name>contextConfigLocation</param-name>
		<param-value>
			classpath:config/context-aspect.xml,
			classpath:config/context-common.xml,
			classpath:config/context-mybatis.xml,
			classpath:config/context-transaction.xml
		</param-value>
	</context-param>
	
	<!-- Spring API에 제공하는 CaharacterEncodingFilter로 한글 인코딩처리 -->
	<filter>
		<filter-name>encodingFilter</filter-name>
		<filter-class>org.springframework.web.filter.CharacterEncodingFilter</filter-class>
		<init-param>
			<param-name>encoding</param-name>
			<param-value>euc_kr</param-value>
		</init-param>
	</filter>
	
	<filter-mapping>
		<filter-name>encodingFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>
	
	<!-- 게시판 Page 하단 Page 번호 개수 예)  이전 1 2 3 4 5  이후 -->
<!-- 	<context-param>
		<param-name>pageUnit</param-name>
		<param-value>3</param-value>
	</context-param>
	
	<context-param>
		<param-name>pageSize</param-name>
		<param-value>3</param-value>
	</context-param> -->

	<filter>
		<filter-name>requestFilter</filter-name>
		<filter-class>com.model2.mvc.common.filter.RequestFilter</filter-class>
	</filter>
	
	<filter-mapping>
		<filter-name>requestFilter</filter-name>
		<url-pattern>/*</url-pattern>
	</filter-mapping>

<!-- 	<servlet>
		<servlet-name>action</servlet-name>
		<servlet-class>com.model2.mvc.framework.ActionServlet</servlet-class>
		<init-param>
			<param-name>resources</param-name>
			<param-value>com/model2/mvc/resources/actionmapping.properties</param-value>
		</init-param>
	</servlet>-->
	
	<!-- Spring API에서 제공하는 단일인입점 선언 -->
    <servlet>
        <servlet-name>action</servlet-name>
        <servlet-class>org.springframework.web.servlet.DispatcherServlet</servlet-class>
        
		<init-param>
			<param-name>contextConfigLocation</param-name>
			<param-value>/config/SpringMVC/common-servlet.xml</param-value>
			<!-- Servlet Meta-data / Spring Meta-data 위치 분리함 -->
		</init-param>        
		
        <load-on-startup>1</load-on-startup>
    </servlet>
    
    <!-- 	URI : / 형식  Servlet Mapping 
			:: 이 형식은  dynamic contents 와 static contents  모든 요청을 처리할
			:: 책임이 있다는 의미를 갖는다. 
			
			:: static contents 요청처리에 대한 설정 필요
			   common-servlet.xml 참조 -->
			   
    <!-- <servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>*.do</url-pattern>
	</servlet-mapping> -->
	
	 <servlet-mapping>
		<servlet-name>action</servlet-name>
		<url-pattern>/</url-pattern>
	</servlet-mapping>
</web-app>